<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structrpc__query__params" kind="struct" language="C++" prot="public">
    <compoundname>rpc_query_params</compoundname>
    <includes refid="query_8h" local="no">query.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structrpc__query__params_1a6e4eafac062b7f7490a4983d56296385" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rpc_query_params::single</definition>
        <argsstring></argsstring>
        <name>single</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/include/rpc/query.h" line="102" column="1" bodyfile="/code/include/rpc/query.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrpc__query__params_1a7b488114aeb262c508dd28acc1a7fc95" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rpc_query_params::count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/include/rpc/query.h" line="103" column="1" bodyfile="/code/include/rpc/query.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrpc__query__params_1a4e33edf4295472adcc84d6d1ccee2ddd" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rpc_query_params::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/include/rpc/query.h" line="104" column="1" bodyfile="/code/include/rpc/query.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrpc__query__params_1a89ee7bc896675c8c2ef148436430ba0a" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rpc_query_params::limit</definition>
        <argsstring></argsstring>
        <name>limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/include/rpc/query.h" line="105" column="1" bodyfile="/code/include/rpc/query.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrpc__query__params_1ad50d1e6e25322f5562ec1793647c1618" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rpc_query_params::reverse</definition>
        <argsstring></argsstring>
        <name>reverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/include/rpc/query.h" line="106" column="1" bodyfile="/code/include/rpc/query.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrpc__query__params_1a39c5b870500ba92953fa1794510223e8" prot="public" static="no" mutable="no">
        <type>_Nullable <ref refid="object_8h_1a29f4de14614637dc5848764170dcd186" kindref="member">rpc_array_cmp_t</ref></type>
        <definition>_Nullable rpc_array_cmp_t rpc_query_params::sort</definition>
        <argsstring></argsstring>
        <name>sort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/include/rpc/query.h" line="107" column="1" bodyfile="/code/include/rpc/query.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structrpc__query__params_1ad0cf32046078f82f707dc9d656bcfe01" prot="public" static="no" mutable="no">
        <type>_Nullable <ref refid="query_8h_1a2e4187b74c3bd970f9e41bb2d02d09a0" kindref="member">rpc_query_cb_t</ref></type>
        <definition>_Nullable rpc_query_cb_t rpc_query_params::callback</definition>
        <argsstring></argsstring>
        <name>callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/include/rpc/query.h" line="108" column="1" bodyfile="/code/include/rpc/query.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Query parameters structure definition.</para><para>Following options could be specified:<itemizedlist>
<listitem><para>single (boolean) - return only first matching element.</para></listitem><listitem><para>count (boolean) - return only the number of matching elements.</para></listitem><listitem><para>offset (unsigned int) - skip specified number of matching elements before yielding the first result.</para></listitem><listitem><para>limit (unsigned int) - yield no more than a specified number of matching elements.</para></listitem><listitem><para>sort (rpc_array_cmp_t) - sort the input array before yielding the results - the sorting function is taking a rpc_array_cmp_t block as an argument to figure out relations between input an array&apos;s elements (a &gt; b, a = b, a &lt; b).</para></listitem><listitem><para>reverse (boolean) - reverse the order of elements of an input array (always done after eventual sorting) - be aware that this operation has to create an intermediate object to store elements in the reversed order, so it might be expensive for large data sets.</para></listitem><listitem><para>callback (rpc_query_cb_t) - for each of the matching elements run a callback function first - query will return an RPC object returned by a callback function, but will skip it if a callback function returns NULL instead of an RPC object. </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <location file="/code/include/rpc/query.h" line="101" column="1" bodyfile="/code/include/rpc/query.h" bodystart="101" bodyend="109"/>
    <listofallmembers>
      <member refid="structrpc__query__params_1ad0cf32046078f82f707dc9d656bcfe01" prot="public" virt="non-virtual"><scope>rpc_query_params</scope><name>callback</name></member>
      <member refid="structrpc__query__params_1a7b488114aeb262c508dd28acc1a7fc95" prot="public" virt="non-virtual"><scope>rpc_query_params</scope><name>count</name></member>
      <member refid="structrpc__query__params_1a89ee7bc896675c8c2ef148436430ba0a" prot="public" virt="non-virtual"><scope>rpc_query_params</scope><name>limit</name></member>
      <member refid="structrpc__query__params_1a4e33edf4295472adcc84d6d1ccee2ddd" prot="public" virt="non-virtual"><scope>rpc_query_params</scope><name>offset</name></member>
      <member refid="structrpc__query__params_1ad50d1e6e25322f5562ec1793647c1618" prot="public" virt="non-virtual"><scope>rpc_query_params</scope><name>reverse</name></member>
      <member refid="structrpc__query__params_1a6e4eafac062b7f7490a4983d56296385" prot="public" virt="non-virtual"><scope>rpc_query_params</scope><name>single</name></member>
      <member refid="structrpc__query__params_1a39c5b870500ba92953fa1794510223e8" prot="public" virt="non-virtual"><scope>rpc_query_params</scope><name>sort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
